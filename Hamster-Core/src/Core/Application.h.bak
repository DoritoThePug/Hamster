#pragma once

#include <map>

#include <glfw3.h>

#include "Events/Event.h"
#include "Events/WindowEvents.h"
//#include "GameObject.h"
//#include "Events/ApplicationEvents.h"

namespace Hamster {
	//class GameObject;

	//class EventDispatcher;

	class Application
	{
	private:
		bool m_running = true;

		EventDispatcher m_Dispatcher;

		// ID, GameObject
		//std::map<int, GameObject*> m_GameObjects;
	public:
		Application();
		~Application();

		void Run();
		void Close(WindowCloseEvent& e);
		void ResizeWindow(WindowResizeEvent& e);

		//void AddGameObject(GameObjectCreatedEvent& e);
		//void AddGameObject(GameObject& gameObject);
		//void RemoveGameObject(int ID);

		void RenderScene();
		void UpdateScene(float deltaTime);
	};
}